<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_ExhibitSelectionPage" xml:space="preserve">
    <value>Exhibit selection page</value>
  </data>
  <data name="Button_HallSelectionPage" xml:space="preserve">
    <value>Hall selection page</value>
  </data>
  <data name="Button_HomePage" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="Button_StandSelectionPage" xml:space="preserve">
    <value>Stand selection page</value>
  </data>
  <data name="ErrorMessage_CacheIsUpToDate" xml:space="preserve">
    <value>Cache is up-to-date</value>
  </data>
  <data name="ErrorMessage_CanNotLoadCache" xml:space="preserve">
    <value>Unable to load cache. Try later, please</value>
  </data>
  <data name="ErrorMessage_InProgress" xml:space="preserve">
    <value>This page is unavailable now. Try later please</value>
  </data>
  <data name="ErrorMessage_LoadingFaild" xml:space="preserve">
    <value>Can not load page. Check Internet connection and caching settings</value>
  </data>
  <data name="ErrorMessage_NotFoundInCache" xml:space="preserve">
    <value>Can not found data in cache. Set "Сheck for updates" field in settings to allow downloading data</value>
  </data>
  <data name="ErrorMessage_ServerIsNotResponse" xml:space="preserve">
    <value>Can not connect to the server</value>
  </data>
  <data name="HallPage_MenuDescription" xml:space="preserve">
    <value>Select a stand, please</value>
  </data>
  <data name="HallPage_Title" xml:space="preserve">
    <value>stand selection</value>
  </data>
  <data name="HomePage_MainText" xml:space="preserve">
    <value>This application helps to visit F. Scorina GSU Museum. It contains information about stands and exhibits.</value>
  </data>
  <data name="HomePage_MenuItem_MainPage" xml:space="preserve">
    <value>Select hall</value>
  </data>
  <data name="HomePage_MenuItem_Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="HomePage_PageTitle" xml:space="preserve">
    <value>GSU Museum</value>
  </data>
  <data name="HomePage_Title" xml:space="preserve">
    <value>F. Scorina GSU Museum</value>
  </data>
  <data name="MainPage_MenuDescription" xml:space="preserve">
    <value>Select a hall, please</value>
  </data>
  <data name="MainPage_Title" xml:space="preserve">
    <value>Hall selection</value>
  </data>
  <data name="MessageBox_ButtonOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="MessageBox_TitleAlert" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="MessageBox_TitleError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="MessageBox_TitleInfo" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="OptionsPage_CacheSectionTitle" xml:space="preserve">
    <value>Cache settings</value>
  </data>
  <data name="OptionsPage_CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="OptionsPage_CheckForUpdatesDescriptionLabel" xml:space="preserve">
    <value>The Internet is used to check cached data for updates. If there are changes, they will be downloaded. The Internet will also be used to download new data. It requires connection to the Internet</value>
  </data>
  <data name="OptionsPage_CheckForUpdatesLabel" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="OptionsPage_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="OptionsPage_LanguageDescription" xml:space="preserve">
    <value>Current interface language</value>
  </data>
  <data name="OptionsPage_LanguageSectionTitle" xml:space="preserve">
    <value>Language settings</value>
  </data>
  <data name="OptionsPage_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="OptionsPage_UseCacheDescriptionLabel" xml:space="preserve">
    <value>Cache will be saved on your mobile storage. It reduces the Internet usage</value>
  </data>
  <data name="OptionsPage_UseCacheLabel" xml:space="preserve">
    <value>Use cache</value>
  </data>
  <data name="OptionsPage_UseOnlyCacheDescriptionLabel" xml:space="preserve">
    <value>Only cached data will be displayed. No need connetction to the Internet</value>
  </data>
  <data name="OptionsPage_UseOnlyCacheLabel" xml:space="preserve">
    <value>Use only cache</value>
  </data>
  <data name="StandPage_MenuDescription" xml:space="preserve">
    <value>Select an exhibit, please</value>
  </data>
  <data name="StandPage_Title" xml:space="preserve">
    <value>exhibit selection</value>
  </data>
</root>